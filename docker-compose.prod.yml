version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: loar-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app-server
      - app-web
    restart: unless-stopped
    networks:
      - loar-network

  app-server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    container_name: loar-server
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/loar-fullstack
      - CORS_ORIGIN=http://localhost
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BETTER_AUTH_URL=http://localhost
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - loar-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  app-web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: loar-web
    environment:
      - NODE_ENV=production
      - VITE_SERVER_URL=http://localhost
    restart: unless-stopped
    networks:
      - loar-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    container_name: loar-postgres
    environment:
      POSTGRES_DB: loar-fullstack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - loar-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  loar-network:
    driver: bridge