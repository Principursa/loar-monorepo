services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: loar-caddy
    ports:
      - "80:80"
      - "443:443"

    environment:
      - CADDY_INGRESS_NETWORK=loar-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    restart: unless-stopped
    networks:
      - loar-network

  app-server:
    image: oven/bun:1.1.8-alpine
    container_name: loar-server
    working_dir: /app
    volumes:
      - .:/app
    env_file:
      - ./apps/server/.env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/loar-fullstack
      - CORS_ORIGIN=https://loartech.xyz
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET:-defaultsecret}
      - BETTER_AUTH_URL=https://loartech.xyz
    command: ["sh", "-c", "apk add --no-cache curl && bun run apps/server/dist/index.js"]
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - loar-network
    labels:
      caddy: loartech.xyz
      caddy.0_route: /trpc/*
      caddy.0_route.reverse_proxy: "{{upstreams 3000}}"
      caddy.1_route: /api/*
      caddy.1_route.reverse_proxy: "{{upstreams 3000}}"

      
  app-web:
    image: caddy:2-alpine
    container_name: loar-web
    volumes:
      - ./apps/web/dist:/usr/share/caddy:ro
      - ./apps/web/Caddyfile:/etc/caddy/Caddyfile:ro
    restart: unless-stopped
    networks:
      - loar-network
    labels:
      caddy: loartech.xyz
      caddy.2_route: /*
      caddy.2_route.reverse_proxy: "{{upstreams 80}}"



  postgres:
    image: postgres:15
    container_name: loar-postgres
    environment:
      POSTGRES_DB: loar-fullstack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - loar-network
      #change this to extend from the apps/server/docker-compose.yml

  minio:
    image: minio/minio
    container_name: loar-minio-prod
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    restart: unless-stopped
    networks:
      - loar-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  caddy_data:
  minio_data:

networks:
  loar-network:
    name: loar-network
    driver: bridge
